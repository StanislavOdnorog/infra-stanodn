name: Deploy Argo Workflows

on:
  push:
    branches: [ main ]
    paths:
      - 'argo-workflows/**'
  workflow_dispatch:

env:
  ARGO_VERSION: "3.4.8"
  MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
  MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Create .env file
      run: |
        cat << EOF > argo-workflows/.env
        MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }}
        POSTGRES_USER=${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB=${{ secrets.POSTGRES_DB }}
        ARGO_VERSION=${{ env.ARGO_VERSION }}
        EOF

    - name: Process config files
      run: |
        cd argo-workflows/config
        envsubst < argo-server-config.yaml > argo-server-config.yaml.tmp && mv argo-server-config.yaml.tmp argo-server-config.yaml
        envsubst < secrets.yaml > secrets.yaml.tmp && mv secrets.yaml.tmp secrets.yaml

    - name: Deploy Argo Workflows
      run: |
        cd argo-workflows
        docker-compose up -d

    - name: Wait for Argo Server
      run: |
        timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:2746)" != "200" ]]; do sleep 5; done' || false

    - name: Verify Deployment
      run: |
        curl -s http://localhost:2746/api/v1/workflows | jq . 