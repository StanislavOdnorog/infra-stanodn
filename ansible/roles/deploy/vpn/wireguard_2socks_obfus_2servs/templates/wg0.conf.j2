[Interface]
# WireGuard Server Configuration
PrivateKey = {{ wg_private_key.content | b64decode | trim }}
Address = {{ wireguard_config.server_ip }}
ListenPort = {{ wireguard_config.port }}
SaveConfig = false

# Enable IP forwarding and NAT
PostUp = iptables -A FORWARD -i {{ wireguard_config.interface }} -j ACCEPT; iptables -A FORWARD -o {{ wireguard_config.interface }} -j ACCEPT; iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE
PostDown = iptables -D FORWARD -i {{ wireguard_config.interface }} -j ACCEPT; iptables -D FORWARD -o {{ wireguard_config.interface }} -j ACCEPT; iptables -t nat -D POSTROUTING -o tun0 -j MASQUERADE

# Route traffic through tun2socks (via {{ tun2socks_config.interface }} interface)
# Note: This routing is handled by tun2socks service, not WireGuard directly
# PostUp = ip route add 0.0.0.0/1 dev {{ tun2socks_config.interface }} table 100; ip route add 128.0.0.0/1 dev {{ tun2socks_config.interface }} table 100; ip rule add from {{ wireguard_config.client_ip_range }} table 100
# PostDown = ip rule del from {{ wireguard_config.client_ip_range }} table 100; ip route del 0.0.0.0/1 dev {{ tun2socks_config.interface }} table 100; ip route del 128.0.0.0/1 dev {{ tun2socks_config.interface }} table 100

# DNS
DNS = {{ wireguard_config.dns }}

# Example peer configuration (clients will be added via UI)
# [Peer]
# PublicKey = CLIENT_PUBLIC_KEY
# AllowedIPs = 10.0.0.2/32 