---

- name: Display final VM configuration
  debug:
    msg:
    - "ðŸ“‹ Final VM Configuration:"
    - "========================"
    - "VM Name (vm_name): {{ vm_name }}"
    - "VM ID (vm_id): {{ vm_id }}"
    - "vCPU Cores (vm_cores): {{ vm_cores }}"
    - "Memory (vm_memory): {{ vm_memory }} MB"
    - "Disk Size (vm_disk_size): {{ vm_disk_size }}"
    - "Description (vm_description): {{ vm_description }}"
    - "Template (vm_template): {{ vm_template }}"
    - "Storage (vm_storage): {{ vm_storage }}"
    - "Network (vm_net_bridge): {{ vm_net_bridge }}"

- name: Validate VM configuration
  assert:
    that:
      - vm_id is defined
      - vm_name is defined
      - vm_template is defined
      - vm_cores is defined
      - vm_memory is defined
      - vm_disk_size is defined
    fail_msg: "Missing required VM configuration parameters"

- name: Check if VM already exists
  command: qm status {{ vm_id }}
  register: vm_exists_check
  failed_when: false
  changed_when: false

- name: Stop if VM already exists
  fail:
    msg: "VM with ID {{ vm_id }} already exists"
  when: vm_exists_check.rc == 0

- name: Clone VM from template
  command: >
    qm clone {{ vm_template }} {{ vm_id }}
    --name {{ vm_name }}
    {% if vm_full_clone %}--full{% endif %}
    {% if vm_description %}--description "{{ vm_description }}"{% endif %}
  register: vm_clone_result

- name: Configure VM hardware
  command: >
    qm set {{ vm_id }}
    --cores {{ vm_cores }}
    --memory {{ vm_memory }}
    --cpu {{ vm_cpu_type }}
    {% if vm_numa %}--numa 1{% endif %}
    --ostype {{ vm_ostype }}
    --machine {{ vm_machine_type }}
    {% if vm_qemu_agent %}--agent enabled=1{% endif %}
    {% if vm_onboot %}--onboot 1{% endif %}
    {% if vm_protection %}--protection 1{% endif %}
    {% if not vm_ballooning %}--balloon 0{% endif %}
    {% if not vm_tablet %}--tablet 0{% endif %}
    --hotplug {{ vm_hotplug }}

- name: Resize VM disk
  command: qm resize {{ vm_id }} scsi0 {{ vm_disk_size }}
  when: vm_disk_size is defined

- name: Start VM after creation
  command: qm start {{ vm_id }}
  when: vm_start_after_create

- name: Wait for QEMU guest agent
  command: qm guest ping {{ vm_id }}
  register: guest_agent_check
  until: guest_agent_check.rc == 0
  retries: "{{ vm_wait_timeout // 10 }}"
  delay: 10
  when: vm_start_after_create and vm_wait_for_guest_agent

- name: Display VM creation summary
  debug:
    msg: |
      - "âœ… VM Creation Complete!"
      - "VM Name: {{ vm_name }}"
      - "VM ID: {{ vm_id }}"
      - "Configuration: {{ vm_cores }} vCPU, {{ vm_memory }}MB RAM, {{ vm_disk_size }} disk"
      - "Status: {{ 'Started' if vm_start_after_create else 'Created (stopped)' }}"