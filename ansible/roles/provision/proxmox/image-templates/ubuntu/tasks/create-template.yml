---
- name: Check Proxmox storage availability
  command: pvesm status
  register: storage_check
  changed_when: false

- name: Fail if storage is not available
  fail:
    msg: "Storage {{ storage_name }} is not available"
  when: storage_name not in storage_check.stdout

- name: Install required packages
  apt:
    name: 
      - libguestfs-tools
      - wget
    state: present
    update_cache: yes

- name: Download Ubuntu Cloud Image
  get_url:
    url: "{{ image_url }}"
    dest: "/tmp/{{ image_name }}"
    mode: '0644'

- name: Install qemu-guest-agent in the image
  command: >
    virt-customize -a "/tmp/{{ image_name }}"
    --run-command "apt-get update && apt-get install -y qemu-guest-agent"

- name: Upload Cloud-Init configuration on Machine
  template:
    src: 99-custom.cfg.j2
    dest: "/tmp/99-custom.cfg"

- name: Upload Cloud-Init configuration
  command: >
    virt-customize -a "/tmp/{{ image_name }}"
    --upload /tmp/99-custom.cfg:/etc/cloud/cloud.cfg.d/99-custom.cfg

- name: Create systemd network timeout override
  command: >
    virt-customize -a "/tmp/{{ image_name }}"
    --run-command "mkdir -p /etc/systemd/system/systemd-networkd-wait-online.service.d/ && echo -e '[Service]\nTimeoutStartSec=180' > /etc/systemd/system/systemd-networkd-wait-online.service.d/override.conf"

- name: Clear machine-id in the image
  command: virt-customize -a "/tmp/{{ image_name }}" --run-command "echo -n > /etc/machine-id"

- name: Create Proxmox VM configuration file
  file:
    path: "/etc/pve/nodes/{{ inventory_hostname }}/qemu-server/{{ vm_template_id }}.conf"
    state: touch

- name: Import disk to Proxmox storage
  command: qm importdisk {{ vm_template_id }} /tmp/{{ image_name }} {{ storage_name }}

- name: Set VM SCSI hardware and disk
  command: qm set {{ vm_template_id }} --scsihw virtio-scsi-pci --scsi0 {{ storage_name }}:vm-{{ vm_template_id }}-disk-0

- name: Set Cloud-Init drive
  command: qm set {{ vm_template_id }} --ide2 {{ storage_name }}:cloudinit

- name: Set boot options
  command: qm set {{ vm_template_id }} --boot c --bootdisk scsi0

- name: Configure serial and VGA
  command: qm set {{ vm_template_id }} --serial0 socket --vga serial0

- name: Enable QEMU guest agent
  command: qm set {{ vm_template_id }} --agent enabled=1

- name: Configure network interface
  command: qm set {{ vm_template_id }} --net0 virtio,bridge={{ vm_net_bridge }},firewall=0

- name: Enable start at boot
  command: qm set {{ vm_template_id }} --onboot 1

- name: Create temporary SSH key file for cloud-init
  copy:
    content: "{{ cloud_init_ssh_key }}"
    dest: "/tmp/ssh_key_{{ vm_template_id }}.pub"
    mode: '0644'
  when: cloud_init_ssh_key is defined and cloud_init_ssh_key != ""

- name: Configure Cloud-Init settings in template
  command: >
    qm set {{ vm_template_id }}
    --ciuser {{ cloud_init_user }}
    --sshkeys /tmp/ssh_key_{{ vm_template_id }}.pub
    --nameserver "8.8.8.8 8.8.4.4"
    --ipconfig0 "ip=dhcp"
  when: cloud_init_ssh_key is defined and cloud_init_ssh_key != ""

- name: Remove temporary SSH key file
  file:
    path: "/tmp/ssh_key_{{ vm_template_id }}.pub"
    state: absent
  when: cloud_init_ssh_key is defined and cloud_init_ssh_key != ""

- name: Convert VM to template
  command: qm template {{ vm_template_id }}

- name: Rename the template
  command: qm set {{ vm_template_id }} --name {{ template_name }}

- name: Wait for 60 seconds before proceeding
  pause:
    seconds: 60 