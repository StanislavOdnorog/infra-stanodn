version: '3.8'

services:
  nomad-exporter:
    build:
      context: ./exporter
    restart: unless-stopped
    networks:
      - monad-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - monad-network

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_USERS_DEFAULT_THEME=dark
      - GF_INSTALL_PLUGINS=marcusolsson-dynamictext-panel,marcusolsson-static-datasource
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/branding:/usr/share/grafana/public/branding
      - ./grafana/img/noders_icon.svg:/usr/share/grafana/public/img/grafana_icon.svg
      - grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - monad-network

  #frontend:
  #  build:
  #    context: ./frontend
  #  ports:
  #    - "80:80"
  #  depends_on:
  #    - grafana
  #    - prometheus
  #  restart: unless-stopped
  #  networks:
  #    - monad-network

networks:
  monad-network:
    driver: bridge

volumes:
  grafana-storage: 