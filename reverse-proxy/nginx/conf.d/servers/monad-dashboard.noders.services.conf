map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    server_name monad-dashboard.noders.services;
    access_log /var/log/nginx/monad-dashboard.noders.services.access.log main;
    error_log /var/log/nginx/monad-dashboard.noders.services.error.log warn;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name monad-dashboard.noders.services;

    access_log /var/log/nginx/monad-dashboard.noders.services.access.log main;
    error_log /var/log/nginx/monad-dashboard.noders.services.error.log warn;

    include /etc/nginx/conf.d/common/ssl.conf;
    include /etc/nginx/conf.d/common/security-headers.conf;
    include /etc/nginx/conf.d/common/proxy.conf;

    location / {
        proxy_pass http://nomad-dashboard.stanodn.lab:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_redirect http://nomad-dashboard.stanodn.lab:3000 https://$host;
        proxy_redirect http://$host https://$host;
    }

    # Proxy Grafana Live WebSocket connections
    location /api/live/ {
        proxy_pass http://nomad-dashboard.stanodn.lab:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /metrics {
        proxy_pass http://nomad-dashboard.stanodn.lab:8080/metrics;
        
        proxy_redirect http://nomad-dashboard.stanodn.lab:8080/metrics https://$host/metrics;
        proxy_redirect http://$host/metrics https://$host/metrics;
    }
} 